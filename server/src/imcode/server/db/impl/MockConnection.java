package imcode.server.db.impl;

import org.apache.commons.lang.NotImplementedException;

import java.sql.*;
import java.util.Map;

public class MockConnection implements Connection {

    public int getTransactionIsolation() {
        throw new NotImplementedException( MockConnection.class );
    }

    public void setTypeMap(Map map) {
        throw new NotImplementedException( MockConnection.class );
    }

    public int getHoldability() throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public void clearWarnings() throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public void close() throws SQLException {
    }

    public void commit() throws SQLException {}

    public void rollback() throws SQLException {}

    public boolean getAutoCommit() throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public boolean isClosed() throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public boolean isReadOnly() throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public void setHoldability( int holdability ) throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public void setTransactionIsolation( int level ) throws SQLException {
    }

    public void setAutoCommit( boolean autoCommit ) throws SQLException {
    }

    public void setReadOnly( boolean readOnly ) throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public String getCatalog() throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public void setCatalog( String catalog ) throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public DatabaseMetaData getMetaData() throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public SQLWarning getWarnings() throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public Savepoint setSavepoint() throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public void releaseSavepoint( Savepoint savepoint ) throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public void rollback( Savepoint savepoint ) throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public Statement createStatement() throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public Statement createStatement( int resultSetType, int resultSetConcurrency )
            throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public Statement createStatement( int resultSetType, int resultSetConcurrency,
                                      int resultSetHoldability ) throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public Map getTypeMap() throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public String nativeSQL( String sql ) throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public CallableStatement prepareCall( String sql ) throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public CallableStatement prepareCall( String sql, int resultSetType,
                                          int resultSetConcurrency ) throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public CallableStatement prepareCall( String sql, int resultSetType,
                                          int resultSetConcurrency,
                                          int resultSetHoldability ) throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public PreparedStatement prepareStatement( String sql )
            throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public PreparedStatement prepareStatement( String sql, int autoGeneratedKeys )
            throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public PreparedStatement prepareStatement( String sql, int resultSetType,
                                               int resultSetConcurrency )
            throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public PreparedStatement prepareStatement( String sql, int resultSetType,
                                               int resultSetConcurrency, int resultSetHoldability )
            throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public PreparedStatement prepareStatement( String sql, int columnIndexes[] )
            throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public Savepoint setSavepoint( String name ) throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

    public PreparedStatement prepareStatement( String sql, String columnNames[] )
            throws SQLException {
        throw new NotImplementedException( MockConnection.class );
    }

}
