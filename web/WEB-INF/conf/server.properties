# imCMS configuration file

# I18N settings:

i18n.defaultLanguage.code = @i18n.defaultLanguage.code@

# Denies multiple login for same user. To enable this option set property value to true.
DenyMultipleUserLogin = @deny-multiple-user-login@

# Uncomment and edit the settings for your database server of choice:

# Database driver and url
JdbcDriver = @db-driver@
JdbcUrl = @db-url@

# Database login
User = @db-user@
Password = @db-pass@

# Max number of connections to the database
MaxConnectionCount = @db-maxconnections@


# Settings for outgoing mail
SmtpServer = @smtp-server@
SmtpPort   = 25


# The language used when no language preference is known.
DefaultLanguage = @defaultlanguage@


# Paths, relative to the webapp root.
TemplatePath = WEB-INF/templates/
IncludePath  = WEB-INF/includes/
FilePath     = WEB-INF/uploads/
ImcmsPath    = imcms/
ImagePath    = images/


# What url-prefix to map document-id:s to, relative to the context path.
# The default "/" makes the relative path to document 1001 be "/1001".
# With a context path of "/imcms", the complete path to document 1001 then becomes "/imcms/1001".
# Comment out to disable
DocumentPathPrefix = /


# Url, relative to the context path
ImageUrl = /images/


# If this is set, a JSESSIONID-cookie will be sent to clients, using this domain.
SessionCookieDomain =


# The number of minutes between scheduled indexings, default 0 means no scheduled indexings.
IndexingSchedulePeriodInMinutes = 0


# The max number of documents cached in memory.
DocumentCacheMaxSize = 100


# The path (relative to the webapproot) to a keystore used for verifying signed code
# that is to be run with raised privileges.
# It is strongly recommended that the keystore be readonly to the webserver user.
KeyStorePath =

# The type of the keystore.
# The default type will be used if unspecified.
KeyStoreType =


# The paths which may be accessed through FileAdmin, relative to the webapp root.
# Separated by ';' or ':'.
FileAdminRootPaths = css/;images/;imcms/;javascript/;jsp/;login/;user/;WEB-INF/includes/;WEB-INF/logs;WEB-INF/templates/;WEB-INF/libraries/


# Workaround for servlet containers (e.g. Tomcat)
# which don't provide a way to properly decode URI's 
# (path-info and query-string) as UTF-8.
# The value is the faulty encoding used by the container.
# Set to empty for the default system encoding.
WorkaroundUriEncoding = iso-8859-1


# Whether a secure connection is required for logging in.
# true or false
SecureLoginRequired = false


# Authentication and user-mapping via LDAP
# By default imCMS uses the popular inetOrgPerson (2.16.840.1.113730.3.2.2) schema found in Netscape Directory Server.
# See for example http://www.cio.ufl.edu/projects/directory/ldap-schema/oc-INETORGPERSON.html
# or http://www.faqs.org/rfcs/rfc2798.html for details.

# Set both of these to LDAP to enable LDAP
ExternalAuthenticator = @external-authenticator@
ExternalUserAndRoleMapper = @external-user-and-role-registry@

LdapUrl = @ldap-url@
LdapBindDn = @ldap-bind-dn@
LdapPassword = @ldap-password@

# By default, 'uid' is the user-identifying attribute, the login name.
# MS Active Directory uses attribute 'sAMAccountName' instead of 'uid'.
LdapUserAttribute.LoginName = @ldap-attribute-login-name@

# MS Active Directory uses objectClass 'user' instead of 'inetOrgPerson'.
LdapUserObjectClass = @ldap-user-object-class@

# You can automatically create and assign imCMS roles from LDAP attributes.
#LdapAttributesMappedToRoles = company, co, ou, l

# You can define your own attribute mappings with "LdapUserAttribute.<xxx> = ldap-attribute",
# where <xxx> is one of LoginName, FirstName, LastName, Title, Company, Address, City, Zip, Country, Province,
# EmailAddress, WorkPhone, MobilePhone, HomePhone.
# This demonstrates using the two Active Directory attributes, "company" and "co" (country):
#LdapUserAttribute.Company = company
#LdapUserAttribute.Country = co


# Authentication and user-mapping via secondary LDAP
# By default imCMS uses the popular inetOrgPerson (2.16.840.1.113730.3.2.2) schema found in Netscape Directory Server.
# See for example http://www.cio.ufl.edu/projects/directory/ldap-schema/oc-INETORGPERSON.html
# or http://www.faqs.org/rfcs/rfc2798.html for details.

# Set both of these to LDAP to enable secondary LDAP
SecondaryExternalAuthenticator = @secondary-external-authenticator@
SecondaryExternalUserAndRoleMapper = @secondary-external-user-and-role-registry@

SecondaryLdapUrl = @secondary-ldap-url@
SecondaryLdapBindDn = @secondary-ldap-bind-dn@
SecondaryLdapPassword = @secondary-ldap-password@

# By default, 'uid' is the user-identifying attribute, the login name.
# MS Active Directory uses attribute 'sAMAccountName' instead of 'uid'.
SecondaryLdapUserAttribute.LoginName = @secondary-ldap-attribute-login-name@

# MS Active Directory uses objectClass 'user' instead of 'inetOrgPerson'.
SecondaryLdapUserObjectClass = @secondary-ldap-user-object-class@

# You can automatically create and assign imCMS roles from LDAP attributes.
#SecondaryLdapAttributesMappedToRoles = company, co, ou, l

# You can define your own attribute mappings with "SecondaryLdapUserAttribute.<xxx> = ldap-attribute",
# where <xxx> is one of LoginName, FirstName, LastName, Title, Company, Address, City, Zip, Country, Province,
# EmailAddress, WorkPhone, MobilePhone, HomePhone.
# This demonstrates using the two Active Directory attributes, "company" and "co" (country):
#SecondaryLdapUserAttribute.Company = company
#SecondaryLdapUserAttribute.Country = co

# This is where all the images that are uploaded to image archive will be stored, can be relative or absolute
# for example: /var/image_archive
ImageArchiveStoragePath = @image-archive-storage-path@

# Temporary images that are being processed are stored here. Change this if your not running on 
# an unix based platform.
ImageArchiveTempPath = @image-archive-temp-path@

# Images from image archive that are being used by imCMS will be stored here, can relative or absolute
ImageArchiveImagesPath = @image-archive-images-path@

# Path to libraries, can be relative or absolute
# Each folder in this directory will become a library in image archive -- these folders can be created using 
# imCMS file manager. Each library can contain one or more raw images which can be activated in image archive.
ImageArchiveLibrariesPath = @image-archive-libraries-path@
ImageArchiveUsersLibraryFolder = @image-archive-users-library-folder@

# Absolute or relative paths separated by ;
# Each path will become an library in image archive
ImageArchiveOldLibraryPaths = @image-archive-old-library-paths@

# Maximum size of an uploaded image in bytes
ImageArchiveMaxImageUploadSize = @image-archive-max-image-upload-size@

# Maximum size of an uploaded ZIP archive in bytes
ImageArchiveMaxZipUploadSize = @image-archive-max-zip-upload-size@
