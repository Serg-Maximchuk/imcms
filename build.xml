<project name="imCMS" default="dist" basedir=".">

  <property name="build"          value="./build"/>
  
  <property name="webroot"        value="${build}"/>

  <property name="images"         value="${webroot}/images"/>
  <property name="login"          value="${webroot}/login"/>

  <property name="adminbuttons"   value="${webroot}/admin"/>
  <property name="WEB-INF"        value="${webroot}/WEB-INF"/>

  <property name="conf"           value="${WEB-INF}/conf"/>
  <property name="classes"        value="${WEB-INF}/classes"/>
  <property name="lib"            value="${WEB-INF}/lib"/>
  <property name="templates"      value="${WEB-INF}/templates"/>
  <property name="includes"       value="${WEB-INF}/includes"/>
  <property name="uploads"        value="${WEB-INF}/uploads"/>
  <property name="logs"           value="${WEB-INF}/logs"/>

  <property name="language"	  value="se"/>
  <property name="srclanguage"	  value="sv"/>
  
  <property name="admintemplates" value="${templates}/${language}/admin"/>
  <property name="texttemplates"  value="${templates}/text"/>
  <property name="demotemplates"  value="${texttemplates}/demo"/>

  <property name="debug" value="on"/>

  <property file="build.properties"/>

  <property name="servleturl"     value="/${webappname}/servlet"/>
  <property name="loginurl"       value="/${webappname}/login"/>
  <property name="imageurl"       value="/${webappname}/images"/>
  <property name="adminbuttonsurl" value="/${webappname}/admin"/>

  <property name="wardist" value="${webappname}.war"/>
  <property name="webapproot" value="${deployroot}/${webappname}"/>

  <target name="init"
          description="Handy target for anything to depend on."
	  if="fail">
    <fail>
      Edit build.properties!
    </fail>

  </target>

  <target name="dist"
          depends="build"
          description="Packages a complete distribution.">

    <jar jarfile="${wardist}"
         basedir="build"/>

    <echo> Done packaging distribution. </echo>

  </target>

  <target name="install-war" depends="dist" description="Copies the WAR-package into the deployroot.">
    <copy file="${wardist}" todir="${deployroot}" overwrite="yes"/>
  </target>

  <target name="install" depends="build" description="Copies the webapp directly into the deployroot.">
    <copy todir="${webapproot}">
      <fileset dir="${build}"/>
    </copy>
  </target>

  <target name="clean" description="Deletes everything for a fresh start.">
    <delete dir="${build}"/>
    <delete file="${wardist}"/>
  </target>

  <target name="build"
          depends="server,servlets,templates,libraries,web,conf,dir"
	  description="Builds everything.">

    <copy file="install/web.xml" todir="${WEB-INF}"/>

    <echo> Done build. </echo>

  </target>

  <target name="server"
	  depends="init,dir"
          description="Builds the server and utility classes.">

    <echo> Building the server and the utility classes. </echo>
    <mkdir dir="${classes}"/>
    <javac srcdir="server/src" destdir="${classes}" debug="${debug}">
      <classpath>
        <pathelement path="${classes}"/>
	  <fileset dir="install/lib">
	    <include name="**/*.jar"/>
	  </fileset>
      </classpath>
    </javac>

    <echo> Done building the server and the utility classes. </echo>

  </target>

  <target name="servlets" 
          depends="init,server"
          description="Builds the servlets.">

    <echo> Building the servlets. </echo>
    <mkdir dir="${classes}"/>
    <javac srcdir="servlets"
           destdir="${classes}"
           includes="*.java"
           classpath="${classes}"
	   debug="${debug}">

      <classpath>
        <pathelement path="${classes}"/>
	  <fileset dir="install/lib">
	    <include name="**/*.jar"/>
	  </fileset>
      </classpath>

    </javac>
    <echo> Done building the servlets. </echo>

  </target>

  <target name="libraries"
          depends="init,dir"
	  description="Copies the jar-files.">

    <copy todir="${lib}">
      <fileset dir="install/lib"/>
    </copy>

  </target>

  <target name="conf"
          depends="init"
          description="Builds the config-directory.">
    <copy todir="${conf}">
      <fileset dir="install/conf">
        <exclude name="policy"/>
      </fileset>
      <filterset>

        <filter token="webapproot" value="${webapproot}"/>
        <filter token="hostname" value="${hostname}"/>
        <filter token="domainname" value="${domainname}"/>

        <filter token="serverobject" value="${serverobject}"/>
        <filter token="servleturl" value="${servleturl}"/>
        <filter token="loginurl" value="${loginurl}"/>
        <filter token="imageurl" value="${imageurl}"/>

	<filter token="db-host" value="${db-host}"/>
	<filter token="db-port" value="${db-port}"/>
	<filter token="db-name" value="${db-name}"/>
	<filter token="db-user" value="${db-user}"/>
	<filter token="db-pass" value="${db-pass}"/>
	<filter token="db-timeout" value="${db-timeout}"/>
	<filter token="db-maxconnections" value="${db-maxconnections}"/>

      </filterset>
    </copy>
  </target>

  <target name="web"
          depends="init"
          description="Creates the public web">
    <mkdir dir="${images}"/>
    <mkdir dir="${login}"/>
    <copy file="templates/index.html" todir="${login}">
      <filterset>
        <filter token="servleturl" value="${servleturl}"/>
      </filterset>
    </copy>
    <copy todir="${images}">
      <fileset dir="install/htdocs/images">
        <patternset>
	  <include name="*.gif"/>
	</patternset>
      </fileset>
    </copy>
    <copy todir="${adminbuttons}">
      <fileset dir="install/htdocs/imcms">
        <patternset>
	  <include name="*.gif"/>
	</patternset>
      </fileset>
    </copy>
    <copy todir="${webroot}">
      <fileset dir="templates">
        <patternset>
	  <include name="*.htm"/>
	  <include name="*.html"/>
	  <exclude name="index.html"/>
	</patternset>
      </fileset>
      <filterset>
        <filter token="servleturl" value="${servleturl}"/>
        <filter token="loginurl" value="${loginurl}"/>
        <filter token="imageurl" value="${imageurl}"/>
      </filterset>
    </copy>

  </target>

  <target name="templates"
          depends="init,dir"
	  description="Copies the templates.">

    <mkdir dir="${admintemplates}"/>
    <mkdir dir="${demotemplates}"/>

    <copy todir="${admintemplates}/adminbuttons">
      <fileset dir="templates/${srclanguage}/adminbuttons"/>
      <filterset>

        <filter token="adminbuttonsurl" value="${adminbuttonsurl}"/>
        <filter token="servleturl" value="${servleturl}"/>
        <filter token="loginurl" value="${loginurl}"/>
        <filter token="imageurl" value="${imageurl}"/>

      </filterset>
    </copy>

    <replace dir="${admintemplates}/adminbuttons"
             token="&#10;" value=""/>

    <replace dir="${admintemplates}/adminbuttons"
             token="&#13;" value=""/>

    <copy todir="${admintemplates}/permissions">
      <fileset dir="templates/${srclanguage}/permissions"/>
      <filterset>

        <filter token="servleturl" value="${servleturl}"/>
        <filter token="loginurl" value="${loginurl}"/>
        <filter token="imageurl" value="${imageurl}"/>

      </filterset>
    </copy>

    <copy todir="${admintemplates}">
      <fileset dir="templates/${srclanguage}">
        <patternset>
	  <include name="*.htm"/>
	  <include name="*.html"/>
	  <include name="*.ini"/>
	  <include name="*.txt"/>
	</patternset>
      </fileset>
      <filterset>
        <filter token="servleturl" value="${servleturl}"/>
        <filter token="loginurl" value="${loginurl}"/>
        <filter token="imageurl" value="${imageurl}"/>
      </filterset>
    </copy>

    <copy todir="${texttemplates}">
      <fileset dir="templates/text"/>
      <filterset>
        <filter token="servleturl" value="${servleturl}"/>
        <filter token="loginurl" value="${loginurl}"/>
        <filter token="imageurl" value="${imageurl}"/>
      </filterset>
    </copy>

  </target>

  <target name="dir"
          depends="init"
          description="Creates some empty directories necessary for imCMS.">
    <mkdir dir="${includes}"/>
    <mkdir dir="${uploads}"/>
    <mkdir dir="${logs}"/>
  </target>

</project>
