<project name="imCMS" default="dist" basedir=".">

  <property name="build"          value="./build"/>
  <property name="doc"            value="./doc"/>  

  <property name="webroot"        value="${build}"/>

  <property name="images"         value="${webroot}/images"/>
  <property name="login"          value="${webroot}/login"/>

  <property name="adminbuttons"   value="${webroot}/admin"/>
  <property name="WEB-INF"        value="${webroot}/WEB-INF"/>

  <property name="conf"           value="${WEB-INF}/conf"/>
  <property name="classes"        value="${WEB-INF}/classes"/>
  <property name="lib"            value="${WEB-INF}/lib"/>
  <property name="templates"      value="${WEB-INF}/templates"/>
  <property name="includes"       value="${WEB-INF}/includes"/>
  <property name="fortunes"       value="${WEB-INF}/fortunes"/>
  <property name="uploads"        value="${WEB-INF}/uploads"/>
  <property name="logs"           value="${WEB-INF}/logs"/>


  <property name="language"	  value="se"/>
  <property name="srclanguage"	  value="sv"/>
  
  <property name="languagetemplates" value="${templates}/${language}"/>

  <property name="conference-templates" value="${languagetemplates}/102"/>
  <property name="chat-templates"       value="${languagetemplates}/103"/>
  <property name="billboard-templates"  value="${languagetemplates}/104"/>
  <property name="postcard-templates"   value="${languagetemplates}/105"/>

  <property name="admintemplates" value="${languagetemplates}/admin"/>
  <property name="texttemplates"  value="${templates}/text"/>
  <property name="demotemplates"  value="${texttemplates}/demo"/>

  <property name="debug" value="on"/>

  <property file="build.properties"/>

  <property name="webappname"     value="imcms"/>
    
  <property name="rooturl"	  value="/${webappname}"/>

  <property name="servleturl"     value="${rooturl}/servlet"/>
  <property name="loginurl"       value="${rooturl}/login"/>
  <property name="imageurl"       value="${rooturl}/images"/>
  <property name="adminbuttonsurl" value="${rooturl}/admin"/>

  <property name="wardist" value="${webappname}.war"/>
  <property name="webapproot" value="${deployroot}/${webappname}"/>

  <target name="init"
          description="Handy target for anything to depend on."
	  if="fail">
    <fail>
      Edit build.properties!
    </fail>

  </target>

  <target name="dist"
          depends="build"
          description="Packages a complete distribution.">

    <jar jarfile="${wardist}"
         basedir="build"/>

    <echo> Done packaging distribution '${wardist}'. </echo>

  </target>

  <target name="doc"
          depends="init"
	  description="Generates javadoc.">
    <javadoc destdir="${doc}">
      <package name="imcode.util"/>
      <package name="imcode.util.log"/>
      <package name="imcode.server"/>
      <package name="imcode.server.parser"/>
      <package name="imcode.external.diverse"/>
      <package name="imcode.external.chat"/>
      <package name=""/>
      <classpath>
	  <fileset dir="install/lib">
	    <include name="**/*.jar"/>
	  </fileset>
      </classpath>
      <sourcepath>
	 <pathelement path="server/src/"/>
	 <pathelement path="servlets/"/>
      </sourcepath>
    </javadoc>
  </target>


  <target name="install-war" depends="dist" description="Copies the WAR-package into the deployroot.">
    <copy file="${wardist}" todir="${deployroot}" overwrite="yes"/>
  </target>

  <target name="install" depends="build" description="Copies the webapp directly into the webapp-directory in the deployroot.">
    <copy todir="${webapproot}">
      <fileset dir="${build}"/>
    </copy>
  </target>

  <target name="clean" description="Deletes everything for a fresh start.">
    <delete dir="${build}"/>
    <delete file="${wardist}"/>
  </target>

  <target name="build"
          depends="server,servlets,templates,libraries,web,conf,dir,conference,chat,billboard,postcard"
	  description="Builds everything.">

    <copy file="install/web.xml" todir="${WEB-INF}"/>

  </target>

  <target name="server"
	  depends="init,dir"
          description="Builds the server and utility classes.">

    <mkdir dir="${classes}"/>
    <javac srcdir="server/src" destdir="${classes}" debug="${debug}">
      <classpath>
        <pathelement path="${classes}"/>
	  <fileset dir="install/lib">
	    <include name="**/*.jar"/>
	  </fileset>
      </classpath>
    </javac>

  </target>

  <target name="servlets" 
          depends="init,server"
          description="Builds the servlets.">

    <mkdir dir="${classes}"/>
    <javac srcdir="servlets"
           destdir="${classes}"
           includes="*.java"
           classpath="${classes}"
	   debug="${debug}">

      <classpath>
        <pathelement path="${classes}"/>
	  <fileset dir="install/lib">
	    <include name="**/*.jar"/>
	  </fileset>
      </classpath>

    </javac>

  </target>

  <target name="libraries"
          depends="init,dir"
	  description="Copies the jar-files.">

    <copy todir="${lib}">
      <fileset dir="install/lib"/>
    </copy>

  </target>

  <target name="conf"
          depends="init"
          description="Builds the config-directory.">
    <copy todir="${conf}">
      <fileset dir="install/conf">
        <exclude name="policy"/>
      </fileset>
      <filterset>

        <filter token="rooturl" value="${rooturl}"/>
        <filter token="servleturl" value="${servleturl}"/>
        <filter token="loginurl" value="${loginurl}"/>
        <filter token="imageurl" value="${imageurl}"/>

	<filter token="db-host" value="${db-host}"/>
	<filter token="db-port" value="${db-port}"/>
	<filter token="db-name" value="${db-name}"/>
	<filter token="db-user" value="${db-user}"/>
	<filter token="db-pass" value="${db-pass}"/>

	<filter token="plugin-db-host" value="${plugin-db-host}"/>
	<filter token="plugin-db-port" value="${plugin-db-port}"/>
	<filter token="plugin-db-name" value="${plugin-db-name}"/>
	<filter token="plugin-db-user" value="${plugin-db-user}"/>
	<filter token="plugin-db-pass" value="${plugin-db-pass}"/>
	
	<filter token="smtp-server" value="${smtp-server}"/>

      </filterset>
    </copy>
  </target>

  <target name="web"
          depends="init"
          description="Creates the public web">
    <mkdir dir="${images}"/>
    <mkdir dir="${login}"/>
    <copy file="templates/index.html" todir="${login}">
    </copy>
    <copy todir="${images}">
      <fileset dir="install/htdocs/images">
        <patternset>
	  <include name="*.gif"/>
	</patternset>
      </fileset>
    </copy>
    <copy todir="${adminbuttons}">
      <fileset dir="install/htdocs/imcms">
        <patternset>
	  <include name="*.gif"/>
	</patternset>
      </fileset>
    </copy>
    <copy todir="${webroot}">
      <fileset dir="templates">
        <patternset>
	  <include name="*.htm"/>
	  <include name="*.html"/>
	  <exclude name="index.html"/>
	</patternset>
      </fileset>
      <filterset>
        <filter token="loginurl" value="${loginurl}"/>
        <filter token="imageurl" value="${imageurl}"/>
      </filterset>
    </copy>

  </target>

  <target name="templates"
          depends="init,dir"
	  description="Copies the templates.">

    <mkdir dir="${admintemplates}"/>
    <mkdir dir="${demotemplates}"/>

    <copy todir="${admintemplates}/adminbuttons">
      <fileset dir="templates/${srclanguage}/adminbuttons"/>
      <filterset>

        <filter token="adminbuttonsurl" value="${adminbuttonsurl}"/>
        <filter token="loginurl" value="${loginurl}"/>
        <filter token="imageurl" value="${imageurl}"/>

      </filterset>
    </copy>

    <replace dir="${admintemplates}/adminbuttons"
             token="&#10;" value=""/>

    <replace dir="${admintemplates}/adminbuttons"
             token="&#13;" value=""/>

    <copy todir="${admintemplates}/permissions">
      <fileset dir="templates/${srclanguage}/permissions"/>
      <filterset>
        <filter token="loginurl" value="${loginurl}"/>
        <filter token="imageurl" value="${imageurl}"/>
      </filterset>
    </copy>

    <copy todir="${admintemplates}">
      <fileset dir="templates/${srclanguage}">
        <patternset>
	  <include name="*.htm"/>
	  <include name="*.html"/>
	  <include name="*.ini"/>
	  <include name="*.txt"/>
	</patternset>
      </fileset>
      <filterset>
        <filter token="loginurl" value="${loginurl}"/>
        <filter token="imageurl" value="${imageurl}"/>
      </filterset>
    </copy>

    <copy todir="${texttemplates}">
      <fileset dir="templates/text"/>
      <filterset>
        <filter token="loginurl" value="${loginurl}"/>
        <filter token="imageurl" value="${imageurl}"/>
      </filterset>
    </copy>

  </target>

  <target name="dir"
          depends="init"
          description="Creates some empty directories necessary for imCMS.">
    <mkdir dir="${includes}"/>
    <mkdir dir="${fortunes}"/>
    <mkdir dir="${uploads}"/>
    <mkdir dir="${logs}"/>
  </target>

  <target name="conference"
          depends="init,conference-servlets,conference-templates,conference-images"
	  description="Builds the conference."/>

  <target name="conference-servlets" 
          depends="init,server"
          description="Builds the conference-servlets.">

    <mkdir dir="${classes}"/>
    <javac srcdir="servlets/conf"
           destdir="${classes}"
           includes="*.java"
           classpath="${classes}"
	   debug="${debug}">

      <classpath>
        <pathelement path="${classes}"/>
	  <fileset dir="install/lib">
	    <include name="**/*.jar"/>
	  </fileset>
      </classpath>
    </javac>

  </target>

  <target name="conference-templates"
          depends="init"
	  description="Copies the conference-templates.">
    <copy todir="${conference-templates}">
      <fileset dir="templates/${srclanguage}/conf" excludes="original/images/"/>
    </copy>
  </target>

  <target name="conference-images"
          depends="init,conference-templates"
	  description="Copies the conference-images.">
    <copy todir="${images}/${language}/102/original">
      <fileset dir="templates/${srclanguage}/conf/original/images" includes="*"/>
    </copy>
  </target>

  <target name="chat"
          depends="init,chat-servlets,chat-templates"
	  description="Builds the chat."/>

  <target name="chat-servlets" 
          depends="init,server"
          description="Builds the chat-servlets.">

    <mkdir dir="${classes}"/>
    <javac srcdir="servlets/chat"
           destdir="${classes}"
           includes="*.java"
           classpath="${classes}"
	   debug="${debug}">

      <classpath>
        <pathelement path="${classes}"/>
	  <fileset dir="install/lib">
	    <include name="**/*.jar"/>
	  </fileset>
      </classpath>
    </javac>

  </target>

  <target name="chat-templates"
          depends="init"
	  description="Copies the chat-templates.">
    <copy todir="${chat-templates}/original">
      <fileset dir="templates/${srclanguage}/chat/orginal"/>
    </copy>
    <copy todir="${chat-templates}">
      <fileset dir="templates/${srclanguage}/chat" excludes="orginal/"/>
    </copy>
  </target>

  <target name="billboard"
          depends="init,billboard-servlets,billboard-templates,billboard-images"
	  description="Builds the billboard."/>

  <target name="billboard-servlets" 
          depends="init,server"
          description="Builds the billboard-servlets.">

    <mkdir dir="${classes}"/>
    <javac srcdir="servlets/billBoard"
           destdir="${classes}"
           includes="*.java"
           classpath="${classes}"
	   debug="${debug}">

      <classpath>
        <pathelement path="${classes}"/>
	  <fileset dir="install/lib">
	    <include name="**/*.jar"/>
	  </fileset>
      </classpath>
    </javac>

  </target>

  <target name="billboard-templates"
          depends="init"
	  description="Copies the billboard-templates.">
    <copy todir="${billboard-templates}/original">
      <fileset dir="templates/${srclanguage}/billBoard/ORIGINAL" excludes="images/"/>
    </copy>
    <copy todir="${billboard-templates}">
      <fileset dir="templates/${srclanguage}/billBoard" excludes="ORIGINAL/"/>
    </copy>
  </target>

  <target name="billboard-images"
          depends="init,billboard-templates"
	  description="Copies the billboard-images.">
    <copy todir="${images}/${language}/104/original">
      <fileset dir="templates/${srclanguage}/billBoard/ORIGINAL/images" includes="*"/>
    </copy>
  </target>

  <target name="postcard"
          depends="init,postcard-templates"
	  description="Builds the postcard."/>

  <target name="postcard-templates"
          depends="init"
	  description="Copies the postcard-templates.">
    <copy todir="${postcard-templates}">
      <fileset dir="templates/${srclanguage}/postcard"/>
    </copy>
  </target>

</project>
