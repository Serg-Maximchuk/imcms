<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!--  
 This is the Solr schema file. This file should be named "schema.xml" and
 should be in the conf directory under the solr home
 (i.e. ./solr/conf/schema.xml by default) 
 or located where the classloader for the Solr webapp can find it.

 This example schema is the recommended starting point for users.
 It should be kept correct and concise, usable out-of-the-box.

 For more information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml

 PERFORMANCE NOTE: this schema includes many optional features and should not
 be used for benchmarking.  To improve performance one could
  - set stored="false" for all fields possible (esp large fields) when you
    only need to search on the field but don't need to return the original
    value.
  - set indexed="false" if you don't need to search on the field, but only
    return the field as a result of searching on other indexed fields.
  - remove all unneeded copyField statements
  - for best index size and searching performance, set "index" to false
    for all general text fields, use copyField to copy them to the
    catchall "text" field, and use that for searching.
  - For maximum indexing performance, use the StreamingUpdateSolrServer
    java client.
  - Remember to run the JVM in server mode, and use a higher logging level
    that avoids logging every request
-->

<schema version="1.2">
    <!-- attribute "name" is the name of this schema and is only used for display purposes.
      Applications should change this to reflect the nature of the search collection.
      version="1.2" is Solr's version number for the schema syntax and semantics.  It should
      not normally be changed by applications.
      1.0: multiValued attribute did not exist, all fields are multiValued by nature
      1.1: multiValued attribute introduced, false by default
      1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields.
    -->

    <types>
        <!-- field type definitions. The "name" attribute is
           just a label to be used by field definitions.  The "class"
           attribute and any other attributes determine the real
           behavior of the fieldType.
             Class names starting with "solr" refer to java classes in the
           org.apache.solr.analysis package.
        -->

        <!-- The StrField type is not analyzed, but indexed/stored verbatim.
           - StrField and TextField support an optional compressThreshold which
           limits compression (if enabled in the derived fields) to values which
           exceed a certain size (in characters).
        -->
        <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>

        <!-- boolean type: "true" or "false" -->
        <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
        <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
        <fieldtype name="binary" class="solr.BinaryField"/>

        <!-- The optional sortMissingLast and sortMissingFirst attributes are
             currently supported on types that are sorted internally as strings.
               This includes "string","boolean","sint","slong","sfloat","sdouble","pdate"
           - If sortMissingLast="true", then a sort on this field will cause documents
             without the field to come after documents with the field,
             regardless of the requested sort order (asc or desc).
           - If sortMissingFirst="true", then a sort on this field will cause documents
             without the field to come before documents with the field,
             regardless of the requested sort order.
           - If sortMissingLast="false" and sortMissingFirst="false" (the default),
             then default lucene sorting will be used which places docs without the
             field first in an ascending sort and last in a descending sort.
        -->

        <!--
          Default numeric field types. For faster range queries, consider the tint/tfloat/tlong/tdouble types.
        -->
        <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
        <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true"
                   positionIncrementGap="0"/>
        <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
        <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true"
                   positionIncrementGap="0"/>

        <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
           is a more restricted form of the canonical representation of dateTime
           http://www.w3.org/TR/xmlschema-2/#dateTime
           The trailing "Z" designates UTC time and is mandatory.
           Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
           All other components are mandatory.

           Expressions can also be used to denote calculations that should be
           performed relative to "NOW" to determine the value, ie...

                 NOW/HOUR
                    ... Round to the start of the current hour
                 NOW-1DAY
                    ... Exactly 1 day prior to now
                 NOW/DAY+6MONTHS+3DAYS
                    ... 6 months and 3 days in the future from the start of
                        the current day

           Consult the DateField javadocs for more information.

           Note: For faster range queries, consider the tdate type
        -->
        <fieldType name="date" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/>

        <!-- imCMS doc indexing - custom data -->
        <fieldType name="keyword_lowercase" class="solr.TextField">
            <analyzer>
                <!--<tokenizer class="solr.KeywordTokenizerFactory"/>-->
                <tokenizer class="solr.KeywordTokenizerFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
        </fieldType>
    </types>

    <fields>
        <!-- Valid attributes for fields:
          name: mandatory - the name for the field
          type: mandatory - the name of a previously defined type from the
            <types> section
          indexed: true if this field should be indexed (searchable or sortable)
          stored: true if this field should be retrievable
          compressed: [false] if this field should be stored using gzip compression
            (this will only apply if the field type is compressable; among
            the standard field types, only TextField and StrField are)
          multiValued: true if this field may contain multiple values per document
          omitNorms: (expert) set to true to omit the norms associated with
            this field (this disables length normalization and index-time
            boosting for the field, and saves some memory).  Only full-text
            fields or fields that need an index-time boost need norms.
          termVectors: [false] set to true to store the term vector for a
            given field.
            When using MoreLikeThis, fields used for similarity should be
            stored for best performance.
          termPositions: Store position information with the term vector.
            This will increase storage costs.
          termOffsets: Store offset information with the term vector. This
            will increase storage costs.
          default: a value that should be used if no value is specified
            when adding a document.
        -->


        <!-- CHECK: -->
        <!-- ??? virtual field ??? - phase -->

        <!--
            Unique field, contains of meta_id and language code combination delimited with underscore (ex: 1001_en).
            Latter may be extended to include doc version no.
        -->
        <field name="id" type="string" indexed="true" stored="true" required="true"/>
        <field name="timestamp" type="date" indexed="true" stored="true" default="NOW" required="true"/>

        <!-- language code - i.e en, se -->
        <field name="language" type="string" indexed="true" stored="true" required="true"/>

        <field name="meta_id" type="int" indexed="true" stored="true" required="true"/>
        <field name="role_id" type="int" indexed="true" stored="false" multiValued="true"/>
        <field name="meta_headline" type="string" indexed="true" stored="false"/>
        <field name="meta_headline_keyword" type="keyword_lowercase" indexed="true" stored="false"/>
        <field name="meta_text" type="string" indexed="true" stored="false"/>
        <field name="doc_type_id" type="int" indexed="true" stored="false"/>
        <field name="creator_id" type="int" indexed="true" stored="false"/>
        <field name="publisher_id" type="int" indexed="true" stored="false"/>
        <field name="created_datetime" type="date" indexed="true" stored="false"/>
        <field name="modified_datetime" type="date" indexed="true" stored="false"/>
        <field name="activated_datetime" type="date" indexed="true" stored="false"/>
        <field name="publication_start_datetime" type="date" indexed="true" stored="false"/>
        <field name="publication_end_datetime" type="date" indexed="true" stored="false"/>
        <field name="archived_datetime" type="date" indexed="true" stored="false"/>
        <!-- publication status -->
        <field name="status" type="int" indexed="true" stored="false"/>
        <!-- text-doc field -->
        <field name="template" type="keyword_lowercase" indexed="true" stored="false"/>
        <!-- text-doc field -->
        <field name="nonstripped_text" type="keyword_lowercase" indexed="true" stored="false" multiValued="true"/>
        <!--text-doc field + also used as prefix + textNo to index the same text field -->
        <!-- todo: solr strip ???: HTMLStripCharFilterFactory -->
        <field name="text" type="keyword_lowercase" indexed="true" stored="false" multiValued="true"/>
        <!--text-doc field-->
        <field name="child_id" type="int" indexed="false" stored="true" multiValued="true"/>
        <!-- text-doc-field -->
        <field name="has_children" type="boolean" indexed="true" stored="false"/>
        <!--text-doc field-->
        <field name="image_link_url" type="keyword_lowercase" indexed="true" stored="false" multiValued="true"/>
        <!-- file-doc field -->
        <field name="mime_type" type="keyword_lowercase" indexed="true" stored="false"/>
        <!-- category name -->
        <field name="category" type="keyword_lowercase" indexed="true" stored="false" multiValued="true"/>
        <field name="category_id" type="int" indexed="true" stored="false" multiValued="true"/>
        <field name="category_type" type="keyword_lowercase" indexed="true" stored="false" multiValued="true"/>
        <field name="category_type_id" type="int" indexed="true" stored="false" multiValued="true"/>
        <field name="keyword" type="keyword_lowercase" indexed="true" stored="false" multiValued="true"/>
        <field name="parent_id" type="int" indexed="true" stored="false" multiValued="true"/>
        <field name="parent_menu_id" type="int" indexed="true" stored="false" multiValued="true"/>
        <field name="has_parents" type="boolean" indexed="true" stored="false"/>
        <field name="alias" type="keyword_lowercase" indexed="true" stored="false"/>

        <!-- ??? todo: property name as field name -> property value as field value ???
        <dynamicField name="*" type="keyword_lowercase" indexed="true" stored="false"/>
        -->
        <dynamicField name="property.*" type="keyword_lowercase" indexed="true" stored="false"/>
        <dynamicField name="text*" type="keyword_lowercase" indexed="true" stored="false" multiValued="true"/>
    </fields>

    <!-- Field to use to determine and enforce document uniqueness.
       Unless this field is marked with required="false", it will be a required field
    -->
    <uniqueKey>id</uniqueKey>

    <!-- field for the QueryParser to use when an explicit fielename is absent -->
    <defaultSearchField>text</defaultSearchField>

    <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
    <!-- todo: configure in handler -->
    <solrQueryParser defaultOperator="OR"/>
</schema>