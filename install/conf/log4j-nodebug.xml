<?xml version="1.0"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">


<!-- Start log4j configuration -->
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/" threshold="debug">

  <!-- Renderer for DocumentRequest -->
  <renderer
    renderingClass="imcode.util.log.FakeRequestRenderer"
    renderedClass="imcode.server.DocumentRequest"/>

  <!-- The accesslog (logs usermovements) -->
  <appender name="ACCESS" class="imcode.util.log.WebAppFileAppender">
    <param name="File" value="WEB-INF/logs/access.log"/>
    <layout class="org.apache.log4j.PatternLayout">
      <param name="ConversionPattern"
	     value="%d{ISO8601} %m%n"/>
    </layout>
  </appender>

  <!--
    Set up an asynchronous appender.
    This slows everything down at little or no load,
    but makes logging "free" under non-CPU-intensive high load.
    If you are performance testing,
    and find the the CPU is maxed out,
    you should consider commenting this out,
    and changing the category below.
  -->
  <appender name="ASYNCACCESS" class="org.apache.log4j.AsyncAppender">
    <appender-ref ref="ACCESS"/>
  </appender>

  <!-- The mainlog (captures edits and changes) -->
  <appender name="MAIN" class="imcode.util.log.WebAppFileAppender">
    <param name="File" value="WEB-INF/logs/main.log"/>
    <layout class="org.apache.log4j.PatternLayout">
      <param name="ConversionPattern" value="%d{ISO8601} %-5p %m%n"/>
    </layout>
  </appender>

  <!--
    Set up an asynchronous appender.
    This slows everything down at little or no load,
    but makes logging "free" under non-CPU-intensive high load.
    If you are performance testing,
    and find the the CPU is maxed out,
    you should consider commenting this out,
    and changing the category below.
  -->
  <appender name="ASYNCMAIN" class="org.apache.log4j.AsyncAppender">
    <appender-ref ref="MAIN"/>
  </appender>

  <!-- The errorlog (captures everything that doesn't go to one of the above. -->
  <appender name="ERROR" class="imcode.util.log.WebAppFileAppender">
    <param name="File" value="WEB-INF/logs/error.log"/>
    <layout class="org.apache.log4j.PatternLayout">
      <param name="ConversionPattern" value="%d{ISO8601} %-5p %c - %m%n"/>
    </layout>
  </appender>

  <!--
    Set up an asynchronous appender.
    This slows everything down at little or no load,
    but makes logging "free" under non-CPU-intensive high load.
    If you are performance testing,
    and find the the CPU is maxed out,
    you should consider commenting this out,
    and changing the category below.
  -->
  <appender name="ASYNCERROR" class="org.apache.log4j.AsyncAppender">
    <appender-ref ref="ERROR"/>
  </appender>

  <!-- Set up accesslog with priority 'info' -->
  <category name="accesslog" additivity="false">
    <priority value="info"/>
    <appender-ref ref="ASYNCACCESS"/>
  </category>

  <!-- Set up mainlog with priority 'info' -->
  <category name="mainlog" additivity="false">
    <priority value="info"/>
    <appender-ref ref="ASYNCMAIN"/>
  </category>

  <!-- Set up the errorlog with priority 'info' -->
  <root>
    <priority value="info"/>
    <appender-ref ref="ASYNCERROR"/>
  </root>

</log4j:configuration>
